/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package startingofdbfinialcode;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.net.Socket;
import javax.swing.JFileChooser;



//
public class MainFrame extends javax.swing.JFrame {

    private String usernameInSession;
    private Socket connection;
    private DataInputStream din; 
    private DataOutputStream dop;
    public MainFrame(String usernameInSession, Socket connection, DataInputStream din ,
            DataOutputStream dop) {
        initComponents();
        
        
        this.usernameInSession = usernameInSession;
        usernameLabel.setText("Username: " +usernameInSession);
        this.connection = connection;
        this.din = din; 
        this.dop = dop;
        
        
        this.setVisible(true);
        
    }
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usernameLabel = new javax.swing.JLabel();
        insertFileButton = new javax.swing.JButton();
        filePathTextFleid = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        fileSelecationButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        usernameLabel.setText("Username:");

        insertFileButton.setText("Insert File");
        insertFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertFileButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("File Selected");

        fileSelecationButton.setText("...");
        fileSelecationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSelecationButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(insertFileButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(filePathTextFleid, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fileSelecationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(jLabel1)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(usernameLabel)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filePathTextFleid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileSelecationButton))
                .addGap(27, 27, 27)
                .addComponent(insertFileButton)
                .addContainerGap(199, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertFileButtonActionPerformed
        try{
           
           File uploadingFile = new File(filePathTextFleid.getText());
           if(uploadingFile.exists()) {
              loadFileToServer(uploadingFile); 
           }else {
               // means the current file path selecation for insert into the master is wrong
               return;
               
           }
        }catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_insertFileButtonActionPerformed
    public void sendFile(String path ) throws Exception {
       
       int bytes = 0;
       
       File file = new File(path);
       
       FileInputStream fileInputStream = new FileInputStream(file);
       
       
       dop.writeLong(file.length());
       byte[] buffer = new byte[4*1024];
       while((bytes = fileInputStream.read(buffer)) != -1) {
           dop.write(buffer, 0 , bytes);
           dop.flush();
       }
       fileInputStream.close();
   }
    
    private void loadFileToServer(File loadingFile) {
        
        try{
            String commandRequest = "***UploadFile#"+ loadingFile.getName() + "#***";
            dop.writeUTF(commandRequest);
            sendFile(loadingFile.getPath());
            System.out.println("sending file");
        }catch(Exception e) {
            e.printStackTrace();
        }
        
    }
    private void fileSelecationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSelecationButtonActionPerformed
        try{
            filePathTextFleid.setText(getFilePath());
            
        }catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_fileSelecationButtonActionPerformed
    
    private String getFilePath(){
        
        try {
            JFileChooser chooser = new JFileChooser();
            int returnVal = chooser.showOpenDialog(null);
            if(returnVal == JFileChooser.APPROVE_OPTION) {
                return chooser.getSelectedFile().getPath();
            }
        
            
        }catch(Exception e){
            e.printStackTrace();
        }
        return null;
        
    }
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField filePathTextFleid;
    private javax.swing.JButton fileSelecationButton;
    private javax.swing.JButton insertFileButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
